#!/bin/sh

GREEN='\033[0;32m'
LIGHTCYAN='\033[1;36m'
NC='\033[0m'

echo -e "${GREEN}Type your commit comment, followed by [ENTER]:${NC}"
# the read command stores the user input as a string
read comment
# the -e command enables the backslash necessary for colored text
echo -e "${GREEN}commit comment has been loaded${NC}"
# just a spacer
echo -e "${LIGHTCYAN}............${NC}"

# get all the differences since last commit (for the log file)
gitDiff=$(git diff)
# get the current date for the log file
currentDate=$(date)
# Pipe (|) the message (echo '...') to cat
# cat then uses uses - (standard input) as the first file and log.txt as the second
# cat conCATenates multiple files. Send the output (>) to a file named temp
# If there are no errors (&&) from cat then rename (mv) the temp file back to the original file (log.txt)
echo "$gitDiff" | cat - log.txt > temp && mv temp log.txt
echo ">>>>>>>>>>>>>>>>>>>>>" | cat - log.txt > temp && mv temp log.txt
echo "$currentDate" | cat - log.txt > temp && mv temp log.txt
echo ">>>>>>>>>>>>>>>>>>>>>" | cat - log.txt > temp && mv temp log.txt

echo -e "${GREEN}git add . started${NC}"
git add .
echo -e "${GREEN}git add . completed${NC}"
echo -e "${LIGHTCYAN}............${NC}"
echo -e "${GREEN}git commit -am started${NC}"
eval "git commit -am \"${comment}\""
echo -e "${GREEN}git commit -am completed${NC}"
echo -e "${LIGHTCYAN}............${NC}"
echo -e "${GREEN}git push started${NC}"
git push
git push github master
echo -e "${GREEN}git push completed${NC}"
echo -e "${LIGHTCYAN}............${NC}"

echo -e "${LIGHTCYAN}............${NC}"
echo -e "${GREEN}deployment complete!${NC}"

echo -e "${LIGHTCYAN}............${NC}"
echo -e "${GREEN}recording logs, please check the log file after completion${NC}"

echo -e "${LIGHTCYAN}............${NC}"
echo -e "${GREEN}log recording complete!${NC}"
